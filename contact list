class Contact:
    def __init__(self, name, phone, email, address):
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address

contacts = []

def add_contact():
    name = input("Enter name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email address: ")
    address = input("Enter address: ")
    
    contact = Contact(name, phone, email, address)
    contacts.append(contact)
    print("Contact added successfully!")

def view_contact_list():
    if not contacts:
        print("No contacts found.")
        return
    
    print("Contact List:")
    for index, contact in enumerate(contacts, start=1):
        print(f"{index}. {contact.name} - {contact.phone}")

def search_contact():
    search_term = input("Enter name or phone number to search: ")
    found_contacts = []
    
    for contact in contacts:
        if search_term.lower() in contact.name.lower() or search_term in contact.phone:
            found_contacts.append(contact)
    
    if not found_contacts:
        print("No matching contacts found.")
    else:
        print("Matching Contacts:")
        for index, contact in enumerate(found_contacts, start=1):
            print(f"{index}. {contact.name} - {contact.phone}")

def update_contact():
    view_contact_list()
    if not contacts:
        return
    
    try:
        index = int(input("Enter the index of the contact to update: ")) - 1
        if 0 <= index < len(contacts):
            contact = contacts[index]
            print("Current Contact Information:")
            print(f"Name: {contact.name}")
            print(f"Phone: {contact.phone}")
            print(f"Email: {contact.email}")
            print(f"Address: {contact.address}")
            
            name = input("Enter new name (leave blank to keep current): ")
            phone = input("Enter new phone number (leave blank to keep current): ")
            email = input("Enter new email address (leave blank to keep current): ")
            address = input("Enter new address (leave blank to keep current): ")
            
            if name:
                contact.name = name
            if phone:
                contact.phone = phone
            if email:
                contact.email = email
            if address:
                contact.address = address
            
            print("Contact updated successfully!")
        else:
            print("Invalid index.")
    except ValueError:
        print("Invalid input. Please enter a valid index.")

def delete_contact():
    view_contact_list()
    if not contacts:
        return
    
    try:
        index = int(input("Enter the index of the contact to delete: ")) - 1
        if 0 <= index < len(contacts):
            contact = contacts.pop(index)
            print(f"Contact '{contact.name}' deleted successfully!")
        else:
            print("Invalid index.")
    except ValueError:
        print("Invalid input. Please enter a valid index.")

def main():
    while True:
        print("=============================")
        print("   Contact Management System")
        print("=============================")
        print("1. View Contact List")
        print("2. Add Contact")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == "1":
            view_contact_list()
        elif choice == "2":
            add_contact()
        elif choice == "3":
            search_contact()
        elif choice == "4":
            update_contact()
        elif choice == "5":
            delete_contact()
        elif choice == "6":
            print("Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a valid option.")

if __name__ == "__main__":
    main()
